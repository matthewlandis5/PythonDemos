#An imperfect program that takes Coca-Cola rewards codes from our data sheet 
#and solves for all theoretical codes that have a hamming distance of 1. 
#This would later be used to look through the sheet again to see if any of these 
#possible codes actually exist.
#This was originally written for undergraduate research with Emory University.

!pip install --upgrade --quiet gspread
from google.colab import auth
auth.authenticate_user()

import gspread
from oauth2client.client import GoogleCredentials
gc = gspread.authorize(GoogleCredentials.get_application_default())
worksheet = gc.open('codes').sheet1
rows = worksheet.get_all_values()
#accesses the Google sheet with the codes and copies them to a var

possibleChar ='BFHJKLMNPRTVWX456790'
List=[]
temp='a'
count=1

for i in range(1,len(rows)):
    if(rows[i][2]=='Yes'):
      List.append(rows[i][0])

#print("Original: "+List[0])
for codeCount in range (len(List)):
  temp=List[codeCount]
  if(len(temp)==14):
    for wordCount in range (14):
      for i in range (len(possibleChar)):
          if(temp[wordCount]!=possibleChar[i]):
            print(str(count)+": "+temp[:wordCount]+possibleChar[i]+temp[wordCount+1:])
            count=count+1
